syntax = "proto3";

package set_v1;

option go_package = "github.com/Kosfedev/learn_go/pkg/set_v1;set_v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Service Api"
    version: "1.0"
  }
  tags: {
    name: "Set"
    description: "Операции с наборами вопросов"
  }
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service SetV1 {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/set"
      body: "*"
    };
  };
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/api/v1/set/{id}"
    };
  };
  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      patch: "/api/v1/set/{id}"
      body: "*"
    };
  };
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/set/{id}"
    };
  };
  rpc ListSearch(ListSearchRequest) returns (ListSearchResponse) {
    option (google.api.http) = {
      get: "/api/v1/set/search"
    };
  };
}

// TODO: вынести
message PaginationRequest {
  int64 limit = 1;
  int64 offset = 2;
}

// TODO: вынести
message PaginationResponse {
  int64 limit = 1;
  int64 offset = 2;
  int64 total = 3;
}

// TODO: вынести
enum SortDirection {
  ASC = 0;
  DESC = 1;
}

message Sort {
   string sort_by = 1;
   SortDirection sort_order = 2;
}

message Filters {
  string name = 1;
}

message Set {
  int64 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message CreateRequest {
  string name = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1;
}

message GetResponse {
  Set data = 1;
}

message UpdateRequest {
  int64 id = 1;
  google.protobuf.StringValue name = 2;
}

message UpdateResponse {
}

message DeleteRequest {
  int64 id = 1;
}

message DeleteResponse {
}

message ListSearchRequest {
  Filters filters = 1;
  PaginationRequest pagination = 2;
  Sort sort = 3;
}

message ListSearchResponse {
  message Data {
    repeated Set sets = 1;
  }

  message Meta {
    Filters filters = 1;
    PaginationResponse pagination = 2;
    Sort sort = 3;
  }

  Data data = 1;
  Meta meta = 2;
}
