syntax = "proto3";

package question_v1;

option go_package = "github.com/Kosfedev/learn_go/pkg/question_v1;question_v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service QuestionV1 {
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Get(GetRequest) returns (GetResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc AddOptions(AddOptionsRequest) returns (AddOptionsResponse);
  rpc DeleteOptions(DeleteOptionsRequest) returns (DeleteOptionsResponse);
}

enum QuestionType {
  QUESTION_TYPE_UNSPECIFIED = 0;
  QUESTION_TYPE_SINGLE = 1;
  QUESTION_TYPE_MULTI = 2;
  QUESTION_TYPE_OPEN = 3;
}

message Question {
  int64 id = 1;
  string text = 2;
  QuestionType question_type = 3;
  google.protobuf.StringValue reference_answer = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message NewQuestion {
  string text = 1;
  QuestionType question_type = 2;
  google.protobuf.StringValue reference_answer = 4;
}

message NewQuestionOption {
  string text = 1;
  bool is_correct = 2;
}

message CreateRequest {
  NewQuestion data = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1;
}

message GetResponse {
  Question data = 1;
}

message UpdateRequest {
  int64 id = 1;
  google.protobuf.StringValue text = 2;
  // TODO: заменить для обратной совместимости?
  optional QuestionType question_type = 3;
  google.protobuf.StringValue reference_answer = 4;
}

message UpdateResponse {
}

message DeleteRequest {
  int64 id = 1;
}

message DeleteResponse {
}

message AddOptionsRequest {
  int64 question_id = 1;
  repeated NewQuestionOption options = 2;
}

message AddOptionsResponse{
}

message DeleteOptionsRequest {
  repeated int64 ids = 1;
}

message DeleteOptionsResponse{
}